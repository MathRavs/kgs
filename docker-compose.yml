# for development environment only
services:
  vault:
    image: hashicorp/vault:latest
    restart: always
    container_name: vault
    ports:
      - '8200:8200'
    command:
      - server
    environment:
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_ADDR: http://127.0.0.1:8200
      VAULT_LOCAL_CONFIG: |
        {
          "ui": true,
          "storage": {
            "raft": {
              "path": "/vault/data",
              "node_id": "vault"
            }
          },
          "listener": {
            "tcp": {
              "address": "0.0.0.0:8200",
              "tls_disable": true
            }
          },
          "default_lease_ttl": "168h",
          "max_lease_ttl": "0h",
          "cluster_addr": "http://127.0.0.1:8201",
          "api_addr": "http://0.0.0.0:8200"    
        }
    cap_add:
      - IPC_LOCK # Important for production
    volumes:
      - ./vault/data:/vault/data # Persist Vault data
  redis_gui:
    image: patrikx3/p3x-redis-ui:latest
    restart: always
    ports:
      - '7843:7843'
    volumes:
      - /home/user/p3x-redis-ui-settings:/settings
  db:
    image: postgres:16.2-alpine3.19
    restart: always
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'postgres'
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - postgres-network
  adminer:
    image: adminer
    restart: always
    ports:
      - '8080:8080'
    environment:
      ADMINER_DEFAULT_SERVER: db
    networks:
      - postgres-network
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: 'redis-server --save 60 1 --loglevel warning --requirepass redis'
    volumes:
      - redis-data:/data
networks:
  postgres-network:

volumes:
  postgres-data:
  redis-data:
